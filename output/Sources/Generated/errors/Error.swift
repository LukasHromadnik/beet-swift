/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita-swift
 */
import Foundation

public enum serum_multisigError: String, Error {
    /**
 * InvalidOwner: '0x12c'
 *
 * @category Errors
 * @category generated
 */
    case invalidOwnerError = "0x12c"
    /**
 * NotEnoughSigners: '0x12d'
 *
 * @category Errors
 * @category generated
 */
    case notEnoughSignersError = "0x12d"
    /**
 * TransactionAlreadySigned: '0x12e'
 *
 * @category Errors
 * @category generated
 */
    case transactionAlreadySignedError = "0x12e"
    /**
 * Overflow: '0x12f'
 *
 * @category Errors
 * @category generated
 */
    case overflowError = "0x12f"
    /**
 * UnableToDelete: '0x130'
 *
 * @category Errors
 * @category generated
 */
    case unableToDeleteError = "0x130"
    /**
 * AlreadyExecuted: '0x131'
 *
 * @category Errors
 * @category generated
 */
    case alreadyExecutedError = "0x131"
    /**
 * InvalidThreshold: '0x132'
 *
 * @category Errors
 * @category generated
 */
    case invalidThresholdError = "0x132"

    public var code: String? { self.rawValue }
}

extension serum_multisigError: LocalizedError {
    public var errorDescription: String? {
        switch self {
            /**
 * InvalidOwner: 'The given owner is not part of this multisig.'
 *
 * @category Errors
 * @category generated
 */
    case .invalidOwnerError: return "The given owner is not part of this multisig."
    /**
 * NotEnoughSigners: 'Not enough owners signed this transaction.'
 *
 * @category Errors
 * @category generated
 */
    case .notEnoughSignersError: return "Not enough owners signed this transaction."
    /**
 * TransactionAlreadySigned: 'Cannot delete a transaction that has been signed by an owner.'
 *
 * @category Errors
 * @category generated
 */
    case .transactionAlreadySignedError: return "Cannot delete a transaction that has been signed by an owner."
    /**
 * Overflow: 'Overflow when adding.'
 *
 * @category Errors
 * @category generated
 */
    case .overflowError: return "Overflow when adding."
    /**
 * UnableToDelete: 'Cannot delete a transaction the owner did not create.'
 *
 * @category Errors
 * @category generated
 */
    case .unableToDeleteError: return "Cannot delete a transaction the owner did not create."
    /**
 * AlreadyExecuted: 'The given transaction has already been executed.'
 *
 * @category Errors
 * @category generated
 */
    case .alreadyExecutedError: return "The given transaction has already been executed."
    /**
 * InvalidThreshold: 'Threshold must be less than or equal to the number of owners.'
 *
 * @category Errors
 * @category generated
 */
    case .invalidThresholdError: return "Threshold must be less than or equal to the number of owners."
        }
    }
}